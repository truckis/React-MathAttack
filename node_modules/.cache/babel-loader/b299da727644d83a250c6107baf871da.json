{"ast":null,"code":"var _jsxFileName = \"/Users/truckis/Desktop/Developer/react-math-attack/src/components/Main/Math.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport './Math.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MathInput = props => {\n  _s();\n\n  const difficulty = props.difficulty;\n  const mathType = props.mathType;\n  let setDifficultyInteger = 10;\n  let setMathSign = '+';\n  let answer;\n  const answerRef = useRef(); // let first_number = useRef();\n  // let second_number = useRef();\n\n  /* Create a funnction that generates two random numbers and \n  outputs the highest ast the first num and lower as second num */\n\n  const generateNumbers = () => {\n    let first_number = Math.ceil(Math.random() * setDifficultyInteger);\n    let second_number = Math.ceil(Math.random() * setDifficultyInteger);\n\n    if (first_number > second_number) {\n      return [first_number, second_number];\n    } else {\n      return [second_number, first_number];\n    }\n  };\n\n  if (difficulty === 'medium') {\n    setDifficultyInteger = 15;\n  } else if (difficulty === 'hard') {\n    setDifficultyInteger = 20;\n  } else {\n    setDifficultyInteger = 10;\n  }\n\n  if (mathType === 'subtraction') {\n    setMathSign = '-';\n  } else if (mathType === 'multiplication') {\n    setMathSign = 'x';\n  } else {\n    setMathSign = '+';\n  } // CheckAnswer function that returns True or False\n  // Handles the submission of the answer\n\n\n  const submitAnswerHandler = event => {\n    event.preventDefault();\n    console.log(answerRef.current.value); // generateNumbers()\n\n    answerRef.current.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"math-container\",\n      onSubmit: submitAnswerHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: generateNumbers[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: setMathSign\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: generateNumbers[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"=\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: answerRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(MathInput, \"NzqGrbJuPR0g3fdtqSAgRniRl4Y=\");\n\n_c = MathInput;\nexport default MathInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"MathInput\");","map":{"version":3,"names":["React","useRef","MathInput","props","difficulty","mathType","setDifficultyInteger","setMathSign","answer","answerRef","generateNumbers","first_number","Math","ceil","random","second_number","submitAnswerHandler","event","preventDefault","console","log","current","value"],"sources":["/Users/truckis/Desktop/Developer/react-math-attack/src/components/Main/Math.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport './Math.css'\n\nconst MathInput = (props) => {\n\n    const difficulty = props.difficulty;\n    const mathType = props.mathType;\n\n    let setDifficultyInteger = 10;\n    let setMathSign = '+';\n\n    let answer;\n    const answerRef = useRef();\n   \n    // let first_number = useRef();\n    // let second_number = useRef();\n\n    /* Create a funnction that generates two random numbers and \n    outputs the highest ast the first num and lower as second num */\n    const generateNumbers = () => {\n        let first_number = Math.ceil(Math.random() * setDifficultyInteger);\n        let second_number = Math.ceil(Math.random() * setDifficultyInteger);\n\n        if(first_number > second_number){\n            return [first_number, second_number]\n        }else {\n            return [second_number, first_number]\n        }\n    }\n\n    if(difficulty === 'medium'){\n        setDifficultyInteger = 15\n    }else if(difficulty === 'hard'){\n        setDifficultyInteger = 20\n    }else{\n        setDifficultyInteger = 10\n    }\n\n    if(mathType === 'subtraction'){\n        setMathSign = '-'\n    }else if(mathType === 'multiplication'){\n        setMathSign = 'x'\n    }else {\n        setMathSign = '+'\n    }\n\n// CheckAnswer function that returns True or False\n\n\n\n// Handles the submission of the answer\n    const submitAnswerHandler = (event) => {\n        event.preventDefault();\n        console.log(answerRef.current.value)\n        // generateNumbers()\n        answerRef.current.value = ''\n    }\n   \n\n    return (\n        <>\n        <form className='math-container' onSubmit={submitAnswerHandler}>\n            <h1>{generateNumbers[0]}</h1>\n            <h2>{setMathSign}</h2>\n            <h1>{generateNumbers[1]}</h1>\n            <h2>=</h2>\n            <input type='text' ref={answerRef} />\n        </form>\n        </>\n    )\n}\n\n\nexport default MathInput;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAO,YAAP;;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAEzB,MAAMC,UAAU,GAAGD,KAAK,CAACC,UAAzB;EACA,MAAMC,QAAQ,GAAGF,KAAK,CAACE,QAAvB;EAEA,IAAIC,oBAAoB,GAAG,EAA3B;EACA,IAAIC,WAAW,GAAG,GAAlB;EAEA,IAAIC,MAAJ;EACA,MAAMC,SAAS,GAAGR,MAAM,EAAxB,CATyB,CAWzB;EACA;;EAEA;AACJ;;EACI,MAAMS,eAAe,GAAG,MAAM;IAC1B,IAAIC,YAAY,GAAGC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgBR,oBAA1B,CAAnB;IACA,IAAIS,aAAa,GAAGH,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgBR,oBAA1B,CAApB;;IAEA,IAAGK,YAAY,GAAGI,aAAlB,EAAgC;MAC5B,OAAO,CAACJ,YAAD,EAAeI,aAAf,CAAP;IACH,CAFD,MAEM;MACF,OAAO,CAACA,aAAD,EAAgBJ,YAAhB,CAAP;IACH;EACJ,CATD;;EAWA,IAAGP,UAAU,KAAK,QAAlB,EAA2B;IACvBE,oBAAoB,GAAG,EAAvB;EACH,CAFD,MAEM,IAAGF,UAAU,KAAK,MAAlB,EAAyB;IAC3BE,oBAAoB,GAAG,EAAvB;EACH,CAFK,MAED;IACDA,oBAAoB,GAAG,EAAvB;EACH;;EAED,IAAGD,QAAQ,KAAK,aAAhB,EAA8B;IAC1BE,WAAW,GAAG,GAAd;EACH,CAFD,MAEM,IAAGF,QAAQ,KAAK,gBAAhB,EAAiC;IACnCE,WAAW,GAAG,GAAd;EACH,CAFK,MAEA;IACFA,WAAW,GAAG,GAAd;EACH,CAzCwB,CA2C7B;EAIA;;;EACI,MAAMS,mBAAmB,GAAIC,KAAD,IAAW;IACnCA,KAAK,CAACC,cAAN;IACAC,OAAO,CAACC,GAAR,CAAYX,SAAS,CAACY,OAAV,CAAkBC,KAA9B,EAFmC,CAGnC;;IACAb,SAAS,CAACY,OAAV,CAAkBC,KAAlB,GAA0B,EAA1B;EACH,CALD;;EAQA,oBACI;IAAA,uBACA;MAAM,SAAS,EAAC,gBAAhB;MAAiC,QAAQ,EAAEN,mBAA3C;MAAA,wBACI;QAAA,UAAKN,eAAe,CAAC,CAAD;MAApB;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,UAAKH;MAAL;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAA,UAAKG,eAAe,CAAC,CAAD;MAApB;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ,eAKI;QAAO,IAAI,EAAC,MAAZ;QAAmB,GAAG,EAAED;MAAxB;QAAA;QAAA;QAAA;MAAA,QALJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADA,iBADJ;AAWH,CAnED;;GAAMP,S;;KAAAA,S;AAsEN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}