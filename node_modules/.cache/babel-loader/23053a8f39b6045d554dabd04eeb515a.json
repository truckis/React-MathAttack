{"ast":null,"code":"var _jsxFileName = \"/Users/truckis/Desktop/Developer/react-math-attack/src/components/Main/Math.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport './Math.css';\nimport ScoreComponent from './Score';\nimport TimerComponent from './Timer';\nimport Controls from './Controls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet score = 0;\nlet points = 10;\n\nconst MathInput = props => {\n  _s();\n\n  const difficulty = props.difficulty;\n  const mathType = props.mathType; // Sets the max num based on selected difficulty\n\n  let setDifficultyInteger = 10;\n  let setMathSign = '+'; // Stores user input for the answer\n\n  const answerRef = useRef(); // Array of two randomly generated Numbers\n\n  const [randomNumbers, setRandomNumbers] = useState([]); // Stores the state of the correct answer\n\n  const [correctAnswer, setCorrectAnswer] = useState();\n  /* Logic to set math controls based on selected \n      difficulty and math type */\n\n  if (difficulty === 'medium') {\n    setDifficultyInteger = 15;\n    points = 15;\n  } else if (difficulty === 'hard') {\n    setDifficultyInteger = 20;\n    points = 20;\n  } else {\n    setDifficultyInteger = 10;\n    points = 10;\n  }\n\n  if (mathType === 'subtraction') {\n    setMathSign = '-';\n  } else if (mathType === 'multiplication') {\n    setMathSign = 'x';\n  } else {\n    setMathSign = '+';\n  }\n  /* Generates two random numbers and sets State */\n\n\n  const generateNumbers = () => {\n    let first_number = Math.ceil(Math.random() * setDifficultyInteger);\n    let second_number = Math.ceil(Math.random() * setDifficultyInteger);\n    console.log(`Generate Number ${[first_number, second_number]}`);\n\n    if (first_number > second_number) {\n      setRandomNumbers([first_number, second_number]);\n    } else {\n      setRandomNumbers([second_number, first_number]);\n    }\n  }; // CheckAnswer function that returns \n\n\n  const checkAnswer = mathSign => {\n    console.log(mathSign);\n\n    if (mathSign === '+' && randomNumbers[0] + randomNumbers[1] == answerRef.current.value) {\n      console.log(`Correct Answer ${randomNumbers[0] + randomNumbers[1]}`);\n      score = score + points;\n      setCorrectAnswer(true);\n      generateNumbers();\n      console.log(`Score: ${score}`);\n    } else if (mathSign === '-' && randomNumbers[0] - randomNumbers[1] == answerRef.current.value) {\n      console.log(`Correct Answer for Subtraction`);\n      score = score + points;\n      generateNumbers();\n      setCorrectAnswer(true);\n    } else if (mathSign === 'x' && randomNumbers[0] * randomNumbers[1] == answerRef.current.value) {\n      console.log(`Correct Answer for Multiplication`);\n      score = score + points;\n      generateNumbers();\n      setCorrectAnswer(true);\n    } else {\n      setCorrectAnswer(false);\n      score = score - points;\n    }\n  };\n\n  const [timerStatus, setTimerStatus] = useState(false);\n\n  const startHandler = () => {\n    setState(setTimerStatus(true));\n    generateNumbers();\n    answerRef.current.focus();\n    console.log('startHandler Executed');\n  };\n\n  const resetHandler = () => {\n    setRandomNumbers([]);\n    console.log('Reset Handler');\n  }; // Handles the submission of the answer\n\n\n  const submitAnswerHandler = event => {\n    event.preventDefault();\n    checkAnswer(setMathSign, randomNumbers);\n    answerRef.current.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"utilities-container\",\n      children: [/*#__PURE__*/_jsxDEV(TimerComponent, {\n        onActivateTimer: timerStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {\n        onStart: startHandler,\n        onReset: resetHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ScoreComponent, {\n        score: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"math-container\",\n      onSubmit: submitAnswerHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: randomNumbers[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: setMathSign\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: randomNumbers[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"=\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: answerRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MathInput, \"Hv5cazjFhU3zrsjIRM2raF3ZoOA=\");\n\n_c = MathInput;\nexport default MathInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"MathInput\");","map":{"version":3,"names":["React","useRef","useState","useEffect","ScoreComponent","TimerComponent","Controls","score","points","MathInput","props","difficulty","mathType","setDifficultyInteger","setMathSign","answerRef","randomNumbers","setRandomNumbers","correctAnswer","setCorrectAnswer","generateNumbers","first_number","Math","ceil","random","second_number","console","log","checkAnswer","mathSign","current","value","timerStatus","setTimerStatus","startHandler","setState","focus","resetHandler","submitAnswerHandler","event","preventDefault"],"sources":["/Users/truckis/Desktop/Developer/react-math-attack/src/components/Main/Math.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport './Math.css'\nimport ScoreComponent from './Score';\nimport TimerComponent from './Timer'\nimport Controls from './Controls'\n\nlet score = 0;\nlet points = 10;\n\nconst MathInput = (props) => {\n\n    const difficulty = props.difficulty;\n    const mathType = props.mathType;\n    // Sets the max num based on selected difficulty\n    let setDifficultyInteger = 10;\n    let setMathSign = '+';\n    // Stores user input for the answer\n    const answerRef = useRef();\n    // Array of two randomly generated Numbers\n    const [randomNumbers, setRandomNumbers] = useState([]);\n    // Stores the state of the correct answer\n    const [correctAnswer, setCorrectAnswer] = useState()\n\n\n\n    /* Logic to set math controls based on selected \n        difficulty and math type */\n    if(difficulty === 'medium'){\n        setDifficultyInteger = 15\n        points = 15\n    }else if(difficulty === 'hard'){\n        setDifficultyInteger = 20\n        points = 20\n    }else{\n        setDifficultyInteger = 10\n        points = 10\n    }\n\n    if(mathType === 'subtraction'){\n        setMathSign = '-'\n    }else if(mathType === 'multiplication'){\n        setMathSign = 'x'\n    }else {\n        setMathSign = '+'\n    }\n\n\n    /* Generates two random numbers and sets State */\n    const generateNumbers = () => {\n        let first_number = Math.ceil(Math.random() * setDifficultyInteger);\n        let second_number = Math.ceil(Math.random() * setDifficultyInteger);\n        console.log(`Generate Number ${[first_number, second_number]}`)\n        if(first_number > second_number){\n            setRandomNumbers([first_number, second_number]);\n        }else {\n            setRandomNumbers([second_number, first_number]);\n        }\n    }\n\n    \n\n    // CheckAnswer function that returns \n    const checkAnswer = (mathSign) => {\n        console.log(mathSign)\n        if(mathSign === '+' && randomNumbers[0] + randomNumbers[1] == answerRef.current.value ){\n            console.log(`Correct Answer ${randomNumbers[0] + randomNumbers[1]}`)\n            score = score + points\n            setCorrectAnswer(true)\n            generateNumbers();\n            console.log(`Score: ${score}`)\n\n        }else if(mathSign === '-' && randomNumbers[0] - randomNumbers[1] == answerRef.current.value) {\n            console.log(`Correct Answer for Subtraction`)\n            score = score + points\n            generateNumbers();\n            setCorrectAnswer(true)\n            \n        }else if(mathSign === 'x' && randomNumbers[0] * randomNumbers[1] == answerRef.current.value){\n            console.log(`Correct Answer for Multiplication`)\n            score = score + points\n            generateNumbers();\n            setCorrectAnswer(true)\n        }else {\n            setCorrectAnswer(false)\n            score = score - points\n        }\n    }\n\n    const [timerStatus, setTimerStatus] = useState(false)\n\n    const startHandler = () => {\n        setState(setTimerStatus(true))\n        generateNumbers()\n        answerRef.current.focus();\n        console.log('startHandler Executed')\n    }\n\n\n\n    const resetHandler = () => {\n        setRandomNumbers([])\n        console.log('Reset Handler')\n    }\n\n\n    // Handles the submission of the answer\n        const submitAnswerHandler = (event) => {\n            event.preventDefault();\n            checkAnswer(setMathSign, randomNumbers)\n            answerRef.current.value = ''\n        }\n\n   \n\n    return (\n        <>\n        <div className='utilities-container'>\n            <TimerComponent onActivateTimer={timerStatus}/>\n            <Controls onStart={startHandler} onReset={resetHandler}/>\n            <ScoreComponent score={score}  />\n        </div>\n        <form className='math-container' onSubmit={submitAnswerHandler}>\n            <h1>{randomNumbers[0]}</h1>\n            <h2>{setMathSign}</h2>\n            <h1>{randomNumbers[1]}</h1>\n            <h2>=</h2>\n            <input type='text' ref={answerRef} />\n        </form>\n        </>\n    )\n}\n\n\nexport default MathInput;"],"mappings":"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"},"metadata":{},"sourceType":"module"}